// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBiblioteka.Servisi.Database;

#nullable disable

namespace eBiblioteka.Servisi.Migrations
{
    [DbContext(typeof(Db180105Context))]
    [Migration("20250315145724_addDatumURecenzije")]
    partial class addDatumURecenzije
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorId"));

                    b.Property<string>("Biografija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AutorId")
                        .HasName("PK__Autor__F58AE929771A00DC");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Citaonica", b =>
                {
                    b.Property<int>("CitaonicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitaonicaId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CitaonicaId")
                        .HasName("PK__Citaonic__2AF2F8E5364443F1");

                    b.ToTable("Citaonica", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Clanarina", b =>
                {
                    b.Property<int>("ClanarinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClanarinaId"));

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("StatusClanarine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TipClanarineId")
                        .HasColumnType("int");

                    b.HasKey("ClanarinaId")
                        .HasName("PK__Clanarin__C51E3B97DF546AA2");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("TipClanarineId");

                    b.ToTable("Clanarina", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Knjiga", b =>
                {
                    b.Property<int>("KnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaId"));

                    b.Property<bool?>("Dostupna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("GodinaIzdanja")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("KnjigaDana")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("KratkiOpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.Property<int?>("ZanrId")
                        .HasColumnType("int");

                    b.HasKey("KnjigaId")
                        .HasName("PK__Knjiga__4A1281F337C344CF");

                    b.HasIndex("ZanrId");

                    b.ToTable("Knjiga", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.KnjigaAutor", b =>
                {
                    b.Property<int>("KnjigaAutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaAutorId"));

                    b.Property<int?>("AutorId")
                        .HasColumnType("int");

                    b.Property<int?>("KnjigaId")
                        .HasColumnType("int");

                    b.HasKey("KnjigaAutorId")
                        .HasName("PK__KnjigaAu__7CCCDDD631B6011C");

                    b.HasIndex("AutorId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("KnjigaAutor", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime?>("DatumBanovanja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D4145F9C87E");

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.KorisnikIzabranaKnjiga", b =>
                {
                    b.Property<int>("KorisnikIzabranaKnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikIzabranaKnjigaId"));

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumVracanja")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsChecked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikIzabranaKnjigaId")
                        .HasName("PK__Korisnik__08384791156793EB");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KorisnikIzabranaKnjiga", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnik__1608726EB57EC12B");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaId"));

                    b.Property<DateTime>("DatumRecenzije")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("Ocjena")
                        .HasColumnType("int");

                    b.Property<bool?>("Odobrena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecenzijaId")
                        .HasName("PK__Recenzij__D36C607006F2FA35");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Recenzija", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumVracanja")
                        .HasColumnType("datetime");

                    b.Property<int?>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool?>("Odobrena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("Pregledana")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DDB80F2209");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Rezervacija", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"));

                    b.Property<int?>("CitaonicaId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.Property<bool?>("JeRezervisan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Kraj")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("Start")
                        .HasColumnType("time");

                    b.HasKey("TerminId")
                        .HasName("PK__Termin__42126C95E3021893");

                    b.HasIndex("CitaonicaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Termin", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.TipClanarine", b =>
                {
                    b.Property<int>("TipClanarineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipClanarineId"));

                    b.Property<int>("Cijena")
                        .HasColumnType("int");

                    b.Property<int>("VrijemeTrajanja")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("TipClanarineId")
                        .HasName("PK__TipClana__3414671F2F0B31B5");

                    b.ToTable("TipClanarine", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloga__DCAB23CBD74FA940");

                    b.ToTable("Uloga", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Zanr", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZanrId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ZanrId")
                        .HasName("PK__Zanr__953868D3F1CE1602");

                    b.ToTable("Zanr", (string)null);
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Clanarina", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Korisnik", "Korisnik")
                        .WithMany("Clanarinas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Clanarina__Koris__66603565");

                    b.HasOne("eBiblioteka.Servisi.Database.TipClanarine", "TipClanarine")
                        .WithMany("Clanarinas")
                        .HasForeignKey("TipClanarineId")
                        .HasConstraintName("FK__Clanarina__TipCl__6754599E");

                    b.Navigation("Korisnik");

                    b.Navigation("TipClanarine");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Knjiga", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Zanr", "Zanr")
                        .WithMany("Knjigas")
                        .HasForeignKey("ZanrId")
                        .HasConstraintName("FK__Knjiga__ZanrId__3B75D760");

                    b.Navigation("Zanr");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.KnjigaAutor", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Autor", "Autor")
                        .WithMany("KnjigaAutors")
                        .HasForeignKey("AutorId")
                        .HasConstraintName("FK__KnjigaAut__Autor__4222D4EF");

                    b.HasOne("eBiblioteka.Servisi.Database.Knjiga", "Knjiga")
                        .WithMany("KnjigaAutors")
                        .HasForeignKey("KnjigaId")
                        .HasConstraintName("FK__KnjigaAut__Knjig__412EB0B6");

                    b.Navigation("Autor");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.KorisnikIzabranaKnjiga", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Knjiga", "Knjiga")
                        .WithMany("KorisnikIzabranaKnjigas")
                        .HasForeignKey("KnjigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KorisnikI__Knjig__59063A47");

                    b.HasOne("eBiblioteka.Servisi.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikIzabranaKnjigas")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KorisnikI__Koris__59FA5E80");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.KorisnikUloga", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikU__Koris__4F7CD00D");

                    b.HasOne("eBiblioteka.Servisi.Database.Uloga", "Uloga")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__KorisnikU__Uloga__5070F446");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Recenzija", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Knjiga", "Knjiga")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KnjigaId")
                        .HasConstraintName("FK__Recenzija__Knjig__48CFD27E");

                    b.HasOne("eBiblioteka.Servisi.Database.Korisnik", "Korisnik")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Recenzija__Koris__49C3F6B7");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Rezervacija", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Knjiga", "Knjiga")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("KnjigaId")
                        .HasConstraintName("FK__Rezervaci__Knjig__534D60F1");

                    b.HasOne("eBiblioteka.Servisi.Database.Korisnik", "Korisnik")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Rezervaci__Koris__5441852A");

                    b.Navigation("Knjiga");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Termin", b =>
                {
                    b.HasOne("eBiblioteka.Servisi.Database.Citaonica", "Citaonica")
                        .WithMany("Termins")
                        .HasForeignKey("CitaonicaId")
                        .HasConstraintName("FK__Termin__Citaonic__619B8048");

                    b.HasOne("eBiblioteka.Servisi.Database.Korisnik", "Korisnik")
                        .WithMany("Termins")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Termin__Korisnik__5FB337D6");

                    b.Navigation("Citaonica");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Autor", b =>
                {
                    b.Navigation("KnjigaAutors");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Citaonica", b =>
                {
                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Knjiga", b =>
                {
                    b.Navigation("KnjigaAutors");

                    b.Navigation("KorisnikIzabranaKnjigas");

                    b.Navigation("Recenzijas");

                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Korisnik", b =>
                {
                    b.Navigation("Clanarinas");

                    b.Navigation("KorisnikIzabranaKnjigas");

                    b.Navigation("KorisnikUlogas");

                    b.Navigation("Recenzijas");

                    b.Navigation("Rezervacijas");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.TipClanarine", b =>
                {
                    b.Navigation("Clanarinas");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Uloga", b =>
                {
                    b.Navigation("KorisnikUlogas");
                });

            modelBuilder.Entity("eBiblioteka.Servisi.Database.Zanr", b =>
                {
                    b.Navigation("Knjigas");
                });
#pragma warning restore 612, 618
        }
    }
}
